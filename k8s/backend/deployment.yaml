apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: three-tier
  name: backend-api
  labels:
    app: backend-api
    tier: backend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: backend-api
      tier: backend
  template:
    metadata:
      labels:
        app: backend-api
        tier: backend # Add tier label to match selector
    spec:
      imagePullSecrets:
        - name: ecr-registry-secret
      containers:
        - name: backend-api
          image: 590183681939.dkr.ecr.ap-south-1.amazonaws.com/backend:8
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP # Add protocol explicitly
          env:
            # ConfigMap Values
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: NODE_ENV
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: PORT
            # Secrets
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongodb-uri
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: jwt-secret
            - name: JWT_EXPIRE
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: JWT_EXPIRE
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 15 # Increased from 5 to give more startup time
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1 # Add explicit success threshold
          readinessProbe:
            httpGet:
              path: /api/ready
              port: http
            initialDelaySeconds: 15 # Increased from 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1 # Add explicit success threshold
          startupProbe:
            httpGet:
              path: /api/startup
              port: http
            failureThreshold: 30
            periodSeconds: 10
            timeoutSeconds: 5 # Add timeout
          securityContext: # Add security context
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
